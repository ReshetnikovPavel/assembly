20 битами адресуется 1 мб

16 сегментов

в реалном режими 

cs ds es fs gs ss
каждый по 16 бит
в него номер сегмента и по смещению по какомунибудь <D-i>p кладем пос смещению внутри сегмента. должна отрисовывать 24 бита, на по факту 20, как раз вот эти недостающие от ipдо 20 бит 

сегменты пересекаются почти полностью кроме 16 байт


из второго сегмента можно получать доступ в первый просто с нужным смещением

всего таких пересек сегментов максимум 64 тыс 535 за искл его самого

что делает дос? выделяет нашей программе один такой сегмент и загр в него по адр 256 ваш код котор вы написали в ком файле
берет значение бинаря и кладет его по адресу 256

и потом просто переде\ает управление туда

все метки, которые мы собирем он им просто присвоит значения размера кода, который был предыдущим
пусть рамер инструкции 3 байта, значит у метки значение будет 3

s:

    jmp s

256+3 != 3 а мы в коде в 3 идем
дос в 256 загружает просто

org 0x100 - так метка пойдет по адресу 0x103 т.е. по адресу 256+3
Урааааа

вначале префикс командного сегомента
80 байт кол-во байт, а затем данные командной строки максимум 127 байт
0d - возврат каретки 13
ну т.е. макс вместить 126 а не 127

dos тоже os, хоть и не защищенная
и у нее тоже есть системные вызовы

здесь не сисколлы, а прерывания! их просто тогда не было

 call far 100:s - позволяет делать вызовы из другого сегмента
 push cs push ip mov cs, 100 mov 1p, s
 (делает примерно вот это)

 У ос бывают разные версии и не всегда имеет смысл поддерживать те же самые адреса для тех же функций, т.е. системные вызовы - это абстракция, интерфейс, который мы можем поддерживать, когда разрабатываем ос

 ну вдруг менжу двумя функциями мы захотим вставить другую и нам просто тупо место между адерсами не войдет

 номер функции всегда пишется в ah
 а для аргументов ds и dx

 строчка в дос должна оканчиваться доллором

 после выхода управление передается программе, из которой мы запустили

 можно для выхода либо int 21h
 либо ret
 ret вроде меньше весит

 никогда просто так не используйте ss и cs
 не меняйте их, там может стек лежать, например

 первый байт отвечает за букву, а второй за цвет и фон
 А еще можно по приколу что-нибудь прикольное сделать на доп баллы

 Можно сделать змейку!))))
 rdtsc для рандомных числеок полезно
